// Colors
$light-font-color: #fefefe;
$dark-font-color: #2d4051;
$connectionSize: 110px;
$inactive-gray: #1a1d1f;
$inactive-light-gray: #1e2123;
$active-gray:  #313234;
$active-light-gray: #393d3f;

// Style resets and initial font
* {
    box-sizing: border-box;
    font-family: Arial, Helvetica, sans-serif;
    list-style: none;
}

// Because there is only one <ul> used in the application the ul selector has it's own rules
// beyond margin and padding reset
ul {
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

// Because there is only one set of <li> used in the application the li selector has it's own rules
// beyond margin and padding reset
li {
    margin: 30px 0;
    padding: 0;
    display: flex;
    width: 100%;
    align-items: center;
    color: darkgray;
    font-weight: bold;
    font-size: .8em;
    label {
        margin-right: 4em;
    }
}

// Only one header so we style it with the header selector
header {
    font-size: 1.7em;
    background-color: rgba(61, 61, 61, 0.41);
    color: #ddd8d8;
    padding: 5px;
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 60px;
    font-family: 'Merriweather Sans', sans-serif;
}

// h2 is only used twice in the <PointTracker> right now so we style them here
// and make it easy for ourselves with the :first-child selector
h2 {
    margin: 0;
    font-family: 'Inter', sans-serif;
    color: $dark-font-color;
    &:first-child{
        color: #ddd8d8;
        font-weight: 300;
    }
}

// This class selector is used for layout management
.flex-container {
    display: flex; 
    justify-content: space-between;
    align-items: center;
    height: 100%;
}

// Simple helper class to center text for elements that we don't need to add
// display: flex to
.centered-text {
    text-align: center;
}

.TalentCalculator {
    max-width: 950px;
    padding: 25px;
    position: relative;
    // This ::before pseudo-element creates the background image for the TalentCalculator
    &::before {
        content: "";
        height: 100%;
        width: 100%;
        position: absolute;
        top: 0;
        left: 0;
        z-index: -3;
        background-image: url(./assets/talent-calc-bg.png);
        background-repeat: repeat;
        background-position: center;
        background-size: cover;
    }
    // This ::after element creates the inner gray border of the TalentCalculator
    &::after {
        content: "";
        height: calc(100% - 20px);
        width: calc(100% - 20px);
        border: 2px solid rgba(100, 99, 99, 0.603);
        position: absolute;
        top: 10px;
        left: 10px;
        z-index: -3;
    }
}

// All we had to add to <TalentPath was diplay: flex to get the layout we wanted
.TalentPath {
    display: flex;
}

// Talent has a lot of style going on
.Talent {
    height: 50px;
    width: 50px;
    background: url(./assets/talent-icons-sprite.png);
    position: relative;
    // Everything but the last child has a margin to account for the space needed for the talent connections
    &:not(:last-child) {
        margin-right: 105px;
        // Everything but the last child gets a ::after pseudo-element that displays the connection
        // between two talents /* The active and inactive are both handled by different ::after elements */
        &::after {
            content: "";
            height: 12px;
            width: $connectionSize;
            position: absolute;
            left: 45px;
            top: 18px;
            background-color:$inactive-gray;
            border: 1px solid $inactive-light-gray;
            z-index: -2;
        }
        // Everything but the last child gets a ::after pseudo-element that displays the connection
        // between two talents /* The active and inactive are both handled by different ::after elements */
        &.active::after {
            content: "";
            height: 12px;
            width:  $connectionSize;
            border: 2px solid $active-light-gray;
            background-color: $active-gray;
            position: absolute;
            left: 50px;
            top: 18px;
            z-index: -2;
        }
    }
    // When hovering we update the background position to the lightly colored sprite position
    // the !important here is currently necessary to gain priority over the in-line styling set within
    // <Talent>
    &:hover {
        background-position-y: 0px !important; /* Possibly revise to not use an !important here*/
    }

    // The ::before pseudo-elements are created to display the background color gradient for active and inactive
    // talents
    &::before {
        content: "";
        height: 56px;
        width: 56px;
        background-image: linear-gradient(to bottom,$active-light-gray 50%, $active-gray 40%,  $active-light-gray 100%);
        box-shadow: 0px 0px 0px 1px  $inactive-light-gray;
        position: absolute;
        left: -3px;
        top: -3px;
        z-index: -1;
    }

    // The ::before pseudo-elements are created to display the background color gradient for active and inactive
    // talents
    &.active::before {
        content: "";
        height: 56px;
        width: 56px;
        background-image: linear-gradient(to bottom, cornflowerblue 50%, $dark-font-color 40%,  cornflowerblue 100%);
        box-shadow: 0px 0px 7px gray;
        position: absolute;
        left: -3px;
        top: -3px;
        z-index: -1;
    }
}

// The PointTracker just needed some basic styling
.PointTracker {
    color: $light-font-color;
    border: 1px solid #101214;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 100%;
    padding: 15px;
    background-color: #0000005b;
}

//Breakpoint at 920
// Change which direction the talent paths flow
// and with that some of the elements that were positioned left to right
// now need to have some styles changed to be down to up
// we handle that here
@media only screen and (max-width: 920px) {
    header {
        margin-bottom: 10px;
    }
    .TalentCalculator {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }
    .TalentPath {
        flex-direction: column-reverse;
    }
    .Talent {
        flex-direction: column;
        margin-top: 50px;
        &:last-child {
            margin-bottom: 0;
            margin-top: 0;
        }
        &:not(:last-child) {
            margin-right: 0;
        }
        &:not(:last-child).active::after , &:not(:last-child)::after {
            content: "";
            height: $connectionSize;
            width: 12px;
            position: absolute;
            left: 18px;
            top: -100px;
        }
    }
    ul {
        flex-direction: row;
    }
    
    li {
        flex-direction:  column-reverse;
        &:first-child{
            margin-right: 50px;
        }
        label {
            margin-right: 0;
            margin-top: 20px;
        }
    }
    .flex-container {
        display: flex;
        align-items: center;
    }
    .PointTracker {
        margin-left: 50px;
    }
}


// Breakpoint at 550
// as we get even smaller we want to handle the font size for the header
// as well as removing some of the extra space we added on the way down to this size via
// default styles or other breakpoints
@media only screen and (max-width: 550px) {
    .flex-container {
        display: block;
    }
    .PointTracker {
        margin-left: 0;
    }
    header {
        font-size: 1.5em;
    }
}
